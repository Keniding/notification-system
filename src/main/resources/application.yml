spring:
  application:
    name: notification-system
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "*"
        spring.json.add.type.headers: false
    listener:
      ack-mode: manual

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus,metrics
  endpoint:
    health:
      show-details: always
    prometheus:
      access: unrestricted

  prometheus:
    metrics:
      export:
        enabled: true

  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.95, 0.99
      sla:
        http:
          server:
            requests: 10ms, 50ms, 100ms, 200ms, 500ms, 1s, 2s

logging:
  level:
    com.keniding.notificationSystem: DEBUG
    org.springframework.kafka: INFO
    org.springframework.web: INFO


## HTTP Requests
#http_server_requests_seconds_count
#http_server_requests_seconds_sum
#http_server_requests_seconds_max
#
## JVM Metrics
#jvm_memory_used_bytes
#jvm_gc_collection_seconds
#
## Kafka Metrics (si usas Spring Kafka)
#kafka_producer_record_send_total
#kafka_consumer_records_consumed_total